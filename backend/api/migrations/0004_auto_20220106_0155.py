# Generated by Django 3.2.10 on 2022-01-06 01:55

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0003_alter_blackcard_pick'),
    ]

    operations = [
        migrations.AlterField(
            model_name='answer',
            name='round',
            field=models.PositiveSmallIntegerField(default=0, editable=False, help_text='game round', validators=[django.core.validators.MinValueValidator(1, message='value should be >= 1 and <= 50'), django.core.validators.MaxValueValidator(50, message='value should be >= 1 and <= 50')]),
        ),
        migrations.AlterField(
            model_name='availableanswer',
            name='round',
            field=models.PositiveSmallIntegerField(default=0, editable=False, help_text='game round', validators=[django.core.validators.MinValueValidator(1, message='value should be >= 1 and <= 50'), django.core.validators.MaxValueValidator(50, message='value should be >= 1 and <= 50')]),
        ),
        migrations.AlterField(
            model_name='availablequestion',
            name='round',
            field=models.PositiveSmallIntegerField(default=0, editable=False, help_text='game round', validators=[django.core.validators.MinValueValidator(1, message='value should be >= 1 and <= 50'), django.core.validators.MaxValueValidator(50, message='value should be >= 1 and <= 50')]),
        ),
        migrations.AlterField(
            model_name='blackcard',
            name='pick',
            field=models.PositiveSmallIntegerField(choices=[(1, 1), (2, 2), (3, 3)], default=1, validators=[django.core.validators.MinValueValidator(1, message='value should be >= 1 and <= 3'), django.core.validators.MaxValueValidator(3, message='value should be >= 1 and <= 3')]),
        ),
        migrations.AlterField(
            model_name='game',
            name='round',
            field=models.PositiveSmallIntegerField(default=0, editable=False, help_text='game round', validators=[django.core.validators.MinValueValidator(1, message='value should be >= 1 and <= 50'), django.core.validators.MaxValueValidator(50, message='value should be >= 1 and <= 50')]),
        ),
        migrations.AlterField(
            model_name='game',
            name='round_time',
            field=models.PositiveSmallIntegerField(default=10, help_text='seconds', validators=[django.core.validators.MinValueValidator(10, message='value should be >= 10 and <= 60'), django.core.validators.MaxValueValidator(60, message='value should be >= 10 and <= 60')]),
        ),
        migrations.AlterField(
            model_name='game',
            name='rounds',
            field=models.PositiveSmallIntegerField(default=5, editable=False, help_text='no of game rounds', validators=[django.core.validators.MinValueValidator(5, message='value should be >= 5 and <= 50'), django.core.validators.MaxValueValidator(50, message='value should be >= 5 and <= 50')]),
        ),
        migrations.AlterField(
            model_name='question',
            name='round',
            field=models.PositiveSmallIntegerField(default=0, editable=False, help_text='game round', validators=[django.core.validators.MinValueValidator(1, message='value should be >= 1 and <= 50'), django.core.validators.MaxValueValidator(50, message='value should be >= 1 and <= 50')]),
        ),
    ]
